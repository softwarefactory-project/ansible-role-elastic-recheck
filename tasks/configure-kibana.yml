---
- name: Configure kibana
  lineinfile:
    dest: /etc/kibana/kibana.yml
    regexp: '^#?{{ item.regexp }}.*'
    line: '{{ item.line }}'
    create: '{{ item.create | default(true) }}'
  loop:
    - regexp: 'elasticsearch.hosts:'
      line: "elasticsearch.hosts: https://{{ ansible_default_ipv4.address }}:9200"
    - regexp: 'server.basePath'
      line: 'server.basePath: "/analytics"'
    - regexp: 'server.host'
      line: "server.host: {{ ansible_default_ipv4.address }}"
    - regexp: 'telemetry.enabled'
      line: 'telemetry.enabled: false'
    - regexp: 'opendistro_security.multitenancy.tenants.enable_private'
      line: 'opendistro_security.multitenancy.tenants.enable_private: false'
    - regexp: 'opendistro_security.multitenancy.enabled'
      line: 'opendistro_security.multitenancy.enabled: true'
    - regexp: 'opendistro_security.multitenancy.tenants.preferred'
      line: 'opendistro_security.multitenancy.tenants.preferred: [ "{{ elasticsearch_tenants }}" ]'
    - regexp: 'opendistro_security.multitenancy.enable_filter'
      line: 'opendistro_security.multitenancy.enable_filter: true'
    - regexp: 'opendistro_security.multitenancy.tenants.enable_global'
      line: 'opendistro_security.multitenancy.tenants.enable_global: false'
    # FIXME: move hardcoded kibanaserver user to dynamic configuration
    - regexp: 'elasticsearch.username'
      line: 'elasticsearch.username: kibanaserver'
    - regexp: 'elasticsearch.password'
      line: 'elasticsearch.password: {{ kibanaserver }}'
    # FIXME
    - regexp: 'elasticsearch.ssl.verificationMode'
      line: 'elasticsearch.ssl.verificationMode: none'
    # Configure Kibana login screen
    - regexp: 'opendistro_security.basicauth.login.title'
      line: 'opendistro_security.basicauth.login.title: "The Software Factory Elasticsearch"'
    - regexp: 'opendistro_security.basicauth.login.subtitle'
      line: 'opendistro_security.basicauth.login.subtitle: "{{ kibana_loginscreen_text }}"'
  register: _kibana_conf
  no_log: true

- name: Remove default route
  lineinfile:
    dest: /etc/kibana/kibana.yml
    regexp: '^#?server.defaultRoute.*'
    state: absent

- name: Restart service if necessary
  service:
    name: kibana
    state: restarted
  when: _kibana_conf.changed
